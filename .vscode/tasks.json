{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "inputs": [
        {
            "id": "godotPath",
            "type": "promptString",
            "description": "Godot executable path",
            "default": "Z:/Godot/Godot_v4.4-stable_mono_win64/Godot_v4.4-stable_mono_win64.exe"
        }
    ],
    "tasks": [
        {
            "label": "build",
            "command": "dotnet",
            "type": "shell",
            "args": [
                "build",
                // Ask dotnet build to generate full paths for file names.
                "/property:GenerateFullPaths=true",
                // Do not generate summary otherwise it leads to duplicate errors in Problems panel
                "/consoleloggerparameters:NoSummary"
            ],
            "group": "build",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": "$msCompile"
        },{
            "label": "makedir-builddir",
            "type": "shell",
            "command": "mkdir -p .build/Win64 .build/Linux",
            "windows": {
                "command": "mkdir -Force -Path '.build/Win64','.build/Linux'"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "presentation": {
                "reveal": "never"
            }
        },
        {
            "label": "export-win64",
            "type": "shell",
            "command": "${input:godotPath}",
            "args": [
                "--headless",
                "--export-debug", //--export-release for Release build
                "Windows Desktop",
                ".build/Win64/Build.exe"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "echo": true
            }
        },
        {
            "label": "Export Windows",
            "dependsOn": [
                "makedir-builddir",
                "export-win64"
            ],
            "dependsOrder": "sequence",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "export-linux",
            "type": "shell",
            "command": "${input:godotPath}",
            "args": [
                "--headless",
                "--export-debug", //--export-release for Release build
                "Linux",
                ".build/Linux/Build.x86_64"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "echo": true
            }
        },
        {
            "label": "Export Linux",
            "dependsOn": [
                "makedir-builddir",
                "export-linux"
            ],
            "dependsOrder": "sequence",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Export All",
            "dependsOn": [
                "makedir-builddir",
                "export-win64",
                "export-linux",
            ],
            "dependsOrder": "sequence",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },{
            "label": "clean-up-run",
            "type": "shell",
            "command": "rm -f steam_api.dll steam_api64.dll steam_api.lib steam_api64.lib libsteam_api.so",
            "windows": {
                "command": "Remove-Item -Force -ErrorAction SilentlyContinue -Path 'steam_api.dll','steam_api64.dll','steam_api.lib','steam_api64.lib','libsteam_api.so'"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "presentation": {
                "reveal": "never"
            }
        },{
            "label": "copy-build-steamdeck",
            "type": "shell",
            "command": "scp -r -P 22 .\\.build\\Linux deck@steamdeck:/home/deck/Workspace/PolyNebula/Projects/Steamworks/.build/Linux",
            "args": [],
            "problemMatcher": [],
            "presentation": {
                "reveal": "always"
            }
        },{
            //For git fetch this project as foundation. After renaming project and files.
            // git remote add upstream https://github.com/PolyNebulaSoftware/Godot-Facepunch.Steamworks.git
            // git remote set-url --push upstream NO_PUSH
            // Run this task to update steamworks to latest commit.
            "label": "Git: Sync Upstream",
            "type": "shell",
            "command": "git fetch upstream && git merge upstream/main",
            "windows": {
                "command": "git fetch upstream; git merge upstream/main"
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "problemMatcher": [],
            "group": {
                "kind": "none",
                "isDefault": true
            }
        }
    ]
}